name: PR First Approval Action

on:
  pull_request_review:
    types:
      - submitted

jobs:
  pr_first_approval:
    runs-on: ubuntu-latest

    steps:
      - name: Check if PR is already approved
        id: check_approval
        run: echo "::set-output name=approved::false"

      - name: Set Output
        if: ${{ github.event.review.state == 'approved' }}
        run: echo "::set-output name=approved::true"

      - name: Check if this is the first approval
        id: check_first_approval
        run: echo "::set-output name=first_approval::false"

      - name: Checkout Code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install Dependencies
        run: npm install @actions/github axios

      - name: Install Dependencies and jq
        run: |
          npm install @actions/github axios
          sudo apt-get update
          sudo apt-get install jq
        shell: bash

      - name: Get Pull Request Details
        id: pr_details
        run: |
          echo "::set-output name=pr_number::${{ github.event.pull_request.number }}"
          echo "::set-output name=repo_owner::${{ github.event.repository.owner.login }}"
          echo "::set-output name=repo_name::${{ github.event.repository.name }}"
          echo "::set-output name=commit_sha::${{ github.event.pull_request.head.sha }}"

          - name: Get Approved Reviews Since Last Commit
            id: approved_reviews_since_commit
            run: |
              pr_number="${{ steps.pr_details.outputs.pr_number }}"
              repo_owner="${{ steps.pr_details.outputs.repo_owner }}"
              repo_name="${{ steps.pr_details.outputs.repo_name }}"
              commit_sha="${{ steps.pr_details.outputs.commit_sha }}"
              
              # Use GitHub API to fetch reviews
              reviews=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
                "https://api.github.com/repos/${repo_owner}/${repo_name}/pulls/${pr_number}/reviews")
              
              # Filter reviews based on commit timestamp
              approved_reviews=$(echo "$reviews" | jq -r --arg commit_sha "$commit_sha" \
                '.[] | select(.state=="APPROVED" and .commit_id==$commit_sha)')
              
              # Count the number of approved reviews since the last commit
              approved_count=$(echo "$approved_reviews" | jq 'length')
              echo "::set-output name=approved_count::${approved_count}"

      - name: Print Approved Count
        id: print_approved_count
        run: "echo Number of approvals: ${{ steps.approved_reviews.outputs.approved_count }}"

      - name: Output variable
        id: output_variable
        run: echo "${{ github.event.review.state }} ${{ steps.check_first_approval.outputs.first_approval }}"

      - name: Set First Approval Output
        if: ${{ github.event.review.state == 'approved' && steps.check_first_approval.outputs.first_approval != 'true' }}
        run: echo "::set-output name=first_approval::true"

      - name: Run on First Approval
        if: ${{ steps.check_first_approval.outputs.first_approval == 'true' }}
        run: echo "This is the first approval for the PR. The action ran successfully."
